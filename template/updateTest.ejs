<link rel="stylesheet" href="css/styleAddTest.css">
<% layout('layout/page') -%>
<% block('title') -%>

<style media="screen">
/* Левая сторона НАЧАЛО*/
.main-and-sidebar-wrapper-left {
    display: flex;
    width: 40%;
    margin-top: 100px;
}
.main-left {
    text-align: center;
    margin-left: 10px;
    flex: 3;
}
.main-left  h2 {
    font-size: 20px;
    margin-bottom: 15px;
    text-align: left;
}
.main-left  h3 {
    font-size: 16px;
		margin-top: 25px;
    margin-bottom: 15px;
    text-align: left;
}
.main-left .select-updateImage {
	float: left;
	margin-top: 10px;
  margin-bottom: 20px;
  width: 25%;
  padding: 12px 20px;
  margin: 8px 0;
  display: inline-block;
  border: 1px solid #ccc;
  border-radius: 4px;
  box-sizing: border-box;
}
.main-left .upload {
	float: left;
	margin-top: 10px;
  margin-bottom: 20px;
  width: 60%;
  padding: 12px 20px;
  margin: 8px 0;
  display: inline-block;
}
#myProgress {
	margin-top: 75px;
	max-width: 120px;
  width: 100%;
  background-color: #ddd;
  text-align: left;
}
#myBar {
  width: 0%;
  height: 30px;
  background-color: #4CAF50;
  text-align: center;
  line-height: 30px;
  color: white;
}
.main-left a {
    color: #2196F3; /* Цвет обычной ссылки */
   }
/* Левая сторона КОНЕЦ*/
.main-and-sidebar-wrapper {
    display: flex;
    width: 20%;
}
.main {
    text-align: center;
/*    margin-right: 60px;*/
    flex: 3;
}
/* Центр НАЧАЛО*/
/* Центер КОНЕЦ*/
/* Правая сторона НАЧАЛО*/
.main-and-sidebar-wrapper-right {
    display: flex;
    width: 40%;
    margin-top: 100px;
}
.main-right {
    text-align: center;
    margin-right: 10px;
    flex: 3;
}
.main-right  h2 {
    font-size: 20px;
    margin-bottom: 15px;
    text-align: left;
}
/* Настройки размеров картинок НАЧАЛО*/
.main-right .settings_entrance_input img {
	float: left;
  width: 12%;
  height:7%;
	border: 1px dotted #546E7A; /* Параметры границы */
}
.main-right .settings_entrance img {
	float: left;
  width: 12%;
  height: 7%;
  margin-top: 10px;
  margin-bottom: 20px;
}
/* Настройки размеров картинок КОНЕЦ*/
/* Правая сторона КОНЕЦ*/
/* Подвал НАЧАЛО*/
footer {
    color: #ef5350;
    text-align: center;
    padding: 20px 0;
    margin-top: 60px;
}
footer p {
    color: #777;
    font-size: 12px;
    padding: 10px;
}
/* Подвал КОНЕЦ*/
/* Настройки кнопки добавить студента КОНЕЦ*/
/* Настройки таблицы студентов НАЧАЛО*/
table {
  border: 1px solid #ccc;
  border-collapse: collapse;
  margin: 0;
  padding: 0;
  table-layout: fixed;
  width: 100%;
}
table tr {
  background: #f8f8f8;
  border: 1px solid #ddd;
  padding: .35em;
}
table th,
table td {
  padding: .625em;
  text-align: center;
}
/* Настройки таблицы студентов КОНЕЦ*/
.input-question-data, .category {
  margin-top: 10px;
  margin-bottom: 20px;
  width: 100%;
  padding: 12px 20px;
  margin: 8px 0;
  display: inline-block;
  border: 1px solid #ccc;
  border-radius: 4px;
  box-sizing: border-box;
}
.action-delete
{
  background-color: #D50000;
  color: white;
  padding: 14px 20px;
  margin: 8px 0;
  border: none;
  border-radius: 4px;
  cursor: pointer;
}
.action-update
{
  background-color: #D50000;
  color: white;
  padding: 14px 20px;
  margin: 8px 0;
  border: none;
  border-radius: 4px;
  cursor: pointer;
}
.add-new-category, .add-new-question {
  width: 100%;
  background-color: #4CAF50;
  color: white;
  padding: 14px 20px;
  margin: 8px 0;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  margin-bottom: 10px;
}

.btn {
    background-color: DodgerBlue; /* Blue background */
    border: none; /* Remove borders */
    color: white; /* White text */
    padding: 12px 16px; /* Some padding */
    font-size: 16px; /* Set a font size */
    cursor: pointer; /* Mouse pointer on hover */
}

/* Darker background on mouse-over */
.btn:hover {
    background-color: RoyalBlue;
}
</style>


  <!-- LEFT START -->
    <div  class="main-and-sidebar-wrapper-left">
        <section class="main-left">
        <h2 style="text-align:center">Name test</h2>
          <div id="categories">





           </div>
          <!-- </div> -->


<button id = "submit-categories" type="submit" class="add-new-category" data-loading-text="Adding...">Add category</button>
<button id = "submit-question" type="submit" class="add-new-question" data-loading-text="Adding...">Add question</button>
  <!-- <button id = "submit-question" type="submit" class="add-new-question" data-loading-text="Adding...">Add question</button> -->
        </section>
    </div>
  <!-- LEFT END -->

<!-- CENTER START -->
    <div class="main-and-sidebar-wrapper">
        <section class="main">

        </section>
    </div>
<!-- CENTER END -->

  <!-- RIGHT START -->
    <div class="main-and-sidebar-wrapper-right">
        <section class="main-right">

        </section>
    </div>
  <!-- RIGHT END -->

    </div>

    <footer>
        <h3>Footer</h3>
        <p>Something.</p>
    </footer>




    <script type="text/javascript"
    src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
    <script type="text/javascript">
    $(document).ready(function(){
     $('.category').click(function(){
      $(this).parent().children('div.questions').toggle('normal');
      return false;
     });
    });
    </script>


<script>
// Клиентский код //
// Человек вводит логин, email,
$(document.forms['cabinet_addUpdateTest']).on('submit', function() {
var form = $(this);
$('.error', form).html('');
$(":submit", form).button("loading");
// Этот логин, email, пароль отправляются на сервер
$.ajax({
  url: "/updateTest", // роут: require('./registration').post
  method: "POST",
  data: form.serialize(),
  complete: function() {
    $(":submit", form).button("reset");
  },
  statusCode: {
    // если ответ сервера 200 - перенаправляем человека в личный кабинет(успешно создали нового пользователя)
    200: function() {
      //form.html("Student Added").addClass('alert-success');
      location.reload();
    },
    // если 403 - высвечивается ошибка(уже есть такой пользователь)
    403: function(jqXHR) {
      var error = JSON.parse(jqXHR.responseText);
      $('.error', form).html(error.message);
    }
  }
});
return false;
// location.reload();
});

</script>



<script>

var config = {
  apiKey: "AIzaSyDivSiqkv7QoDAe8qiY1QevU5N4vQ7aHZw",
  authDomain: "profpref-c5ce0.firebaseapp.com",
  databaseURL: "https://profpref-c5ce0.firebaseio.com",
  projectId: "profpref-c5ce0",
  storageBucket: "profpref-c5ce0.appspot.com",
  messagingSenderId: "664101035809"
};
firebase.initializeApp(config);

var refCurrentTest = firebase.database().ref("tests/" + "<%= testId %>");
var storage = firebase.app().storage("profpref-c5ce0.appspot.com");

var categories = document.getElementsByClassName('categories');

var lastCategoryKey = 0;
var categoriesLength = 0;

$( "#submit-categories" ).click(function() {
  refCurrentTest.child("categories").child(lastCategoryKey).set({
  name: "Some category"
  });
});




refCurrentTest.child("categories").on('child_added', function(snapshot) {

    var lastQuestionKey = 0;

    if (snapshot.child('name').val() != null) {

        lastCategoryKey = parseInt(snapshot.getKey()) + 1

        $('#categories').append('<table class="categories" id="category_' + categories.length + '">  <tbody><tr style="background-color:#fff; border-color: #fff;"><td id=str_category' + snapshot.getKey() + ' style="width:80%"><input type="text" id = titleCategory' + snapshot.getKey() + ' value="' + snapshot.child('name').val() + '" class="category" placeholder="Category"></td><td id = btn_delete' + snapshot.getKey() + ' class="delete"><button class="action-delete" style="background: url(../imagesDefault/cross.png) no-repeat;"></button></td><td id = btn_delete' + snapshot.getKey() + ' class="delete"><button id = btn_add_question' + snapshot.getKey() + ' type="button">add question</button></td></tr></tbody></table> <div id="questions-category-'+ snapshot.getKey() +'" class="questions"></div></div>');

        var categoryId = '#titleCategory' + snapshot.getKey()

        $(categoryId).on('input',function(e){

            if ($(categoryId).val() != "") {
              refCurrentTest.child("categories").child(snapshot.getKey()).update({
              name: $(categoryId).val()
              });
            }
        });

        var btnDeleteId = "#btn_delete" + snapshot.getKey()

        $(btnDeleteId).click(function(e){
            refCurrentTest.child("categories").child(snapshot.getKey()).remove()
        });

        refCurrentTest.child("categories").on('child_removed', function (snapshot) {
            var strCategoryId = "#str_category" + snapshot.getKey()
            var currentBtnDeleteId = "#btn_delete" + snapshot.getKey()

            $(strCategoryId).remove();
            $(currentBtnDeleteId).remove();
        });

        var btnAddQuestion = "#btn_add_question" + snapshot.getKey()


        //Отрисовка добавления вопроса к категории
        refCurrentTest.child("categories").child(snapshot.getKey()).child("questions").on('child_added', function(snapshotOfquestion) {

          lastQuestionKey = parseInt(snapshotOfquestion.getKey()) + 1

           var questionId = '#questions-category-'+ snapshot.getKey()

           $(questionId).append('<div class="question"><table><tbody><tr  id="str_question'+ snapshot.getKey() + snapshotOfquestion.getKey() + '" style="background-color:#fff; border-color: #fff;"><td style="width:80%"><input id="inputQuestion'+ snapshot.getKey() + snapshotOfquestion.getKey() + '"type="text" value="' + snapshotOfquestion.child("title").val() + '" class="input-question-data" placeholder="Question" required></td><td class="update"><td class="delete"><button class="action-delete" id = "btn_delete'+ snapshot.getKey() + snapshotOfquestion.getKey() +'"style="background: url(../imagesDefault/cross.png) no-repeat;"></button></td><td class="btn"><input type="file" style="width:150px;" class="upload" id="iploadQuestion'+ snapshot.getKey() +"_"+ snapshotOfquestion.getKey() + '" size="50" name="icon" onchange="loadPhoto(this,' + snapshot.getKey() + "," + snapshotOfquestion.getKey() +');"></td> <td><img src="" class="img-responsive constantly" id="questionImg'+ snapshot.getKey() + snapshotOfquestion.getKey() +'"></td></tr></tbody></table></div>');


           //Изменение вопроса
           var questionInputId = "#inputQuestion" + snapshot.getKey() + snapshotOfquestion.getKey()
           $(questionInputId).on('input',function(e){

               if ($(questionInputId).val() != "") {
                 refCurrentTest.child("categories").child(snapshot.getKey()).child("questions").child(snapshotOfquestion.getKey()).update({
                 title: $(questionInputId).val()
                 });
               }
           });


           //Удаление вопроса
           var btnDeleteQuestionId = "#btn_delete" + snapshot.getKey() + snapshotOfquestion.getKey()
           $(btnDeleteQuestionId).click(function(e){
               refCurrentTest.child("categories").child(snapshot.getKey()).child("questions").child(snapshotOfquestion.getKey()).remove()
           });


           //Отрисовка удаления вопроса
           refCurrentTest.child("categories").child(snapshot.getKey()).child("questions").on('child_removed', function (snapshotQuestionRemoved) {
               var strQuestionId = "#str_question" + snapshot.getKey() + snapshotQuestionRemoved.getKey()
               $(strQuestionId).remove();
           });


           //Добавление фотографии к вопросу
           var urlQuestionPicture = storage.ref("tests/" + "iploadQuestion"+ snapshot.getKey() + "_"+ snapshotOfquestion.getKey() + "_photo.png");

           urlQuestionPicture.getDownloadURL().then(function(url) {

           var imageQuestionId = "#questionImg" + snapshot.getKey() + snapshotOfquestion.getKey()
           $(imageQuestionId).attr('src', url);

           });



        });

        $(btnAddQuestion).click(function(e) {

          refCurrentTest.child("categories").child(snapshot.getKey()).child("questions").child(lastQuestionKey).update({
            title : "Some title"
          })

        });

    }

})

function loadPhoto(input, categotyId, questionId) {

       console.log(categotyId);
       console.log(questionId);

       var filetoUpload=input.files[0];

       var storageRef = firebase.storage().ref("tests/" + input.id + "_photo" + ".png");
       var namePhotoDB = input.id + "_photo" + ".png";

       var successForman = input.value.search(/^.*\.(?:jpg|jpeg|mp3|mp4)\s*$/ig)

         if(successForman!=0){
            alert("Invalid file format");
            return;
         }

       var task = storageRef.put(filetoUpload);

        task.on('state_changed',
           function progress(snapshot){
               var percentage = snapshot.bytesTransferred / snapshot.totalBytes * 100;
               console.log(percentage);
           },
           function error(err){

           },
           function complete() {

               var downloadURL = task.snapshot.downloadURL;

               refCurrentTest.child("categories").child(categotyId).child("questions").child(questionId).update({
                   "picture": namePhotoDB
                 });

           }
       );
}

</script>





<script>
// Загрузка файлов
// искать в resultTest.ejs  ОРИГИНАЛ
</script>
