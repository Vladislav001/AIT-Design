var { map } = require('../../index');
var React = require('react');
var all = require('when/keys').all;

var makeRouter = require('./utils/makeRouter');
var location = require('./utils/location');

var users = require('./routes/users');
var user = require('./routes/user');
var newUser = require('./routes/newUser');
var notFound = require('./routes/notFound');

var routes = map((defRoute) => {
  defRoute('/user/new', newUser);
  defRoute('/', users, (defRoute) => {
    defRoute('/user/:id', user);
  });
  defRoute('/(.*)', notFound);
});

var fetch = (routes, params) => {
  return all(routes.filter((route) => {
    return route.fetch;
  }).reduce((promises, route) => {
    promises[route.name] = route.fetch(params);
    return promises;
  }, {}));
};

makeRouter(routes, location, (match, cb) => {
  var { handlers, params } = match;
  fetch(handlers, params).then((data) => {
    var element = handlers.reduceRight((element, route) => {
      return route.render(data, element);
    }, null);
    cb(React.render(element, document.body));
  });
});

